	Nesta atividade final da disciplina de Programação Orientada a Objetos busquei realizar a execução de um sistema análogo ao de aplicativos como Uber. Visto isso, o foco do projeto seria possibilitar cadastros de passageiros e de motoristas e, sob esse mesmo viés, cadastrar motos e carros. Sendo assim, buscando implementar os conhecimentos de POO, as classes criadas foram passageiros e motoristas, as quais têm como atributos o destino e a avaliação da viagem com as funções de informar o destino e de realiza o pagamento para o caso da classe do passageiro e o salário em conjunto com a avaliação do passageiro com as funções de dirigir e de manter o veículo dentro dos padrões de segurança para o caso do motorista e, ainda, cada classe possui seu respectivo construtor para facilitação de inputs e melhoria na legibilidade do código permitindo a atribuição de valores a variáveis de forma mais simples.
	A partir disso, seguindo o pilar do encapsulamento, os atributos destino, avaliação da viagem, salário e avaliação do passageiro tiveram suas visibilidades definidas como "private" e, naturalmente, para que seja possível a manipulação desses atributos foram definidos os métodos "get" e "set" de cada um deles.
	Com esse mesmo raciocínio, foram criadas as classes carro e moto, tendo atributos de validação da quantidade de rodas se forem quatro e a presença de estepe no caso da classe carro, enquanto há a validação das duas rodas e de um capacete extra no caso da classe moto, seguindo, também, a mesma lógica dos construtores citados acima.
	Seguindo no processo de desenvolvimento, foi possível abstrair duas super classes, a classe usuário, que seria uma super classe em relação às classes motorista e passageiro, já que essas duas compartilham dois atributos, nome e CPF e ambos devem realizar a função de cadastro no aplicativo, sendo assim, seguindo o pilar da herança, tanto a classe passageiro, quanto a classe motorista herdam essas entidades.
	Do mesmo modo, para as classes carro e moto, foi criada a super classe veículos, que apresentam dois atributos, placa e cor e todas as funcionalidades padrão de um veículo: ligar, desligar, acelerar e frear, as quais são herdadas pelas classe moto e carro.
	É importante ressaltar que essas super classes foram implementadas como interface, visto que possuem um grau maior de abstração associado a elas.
	Em seguida, como definido nas regras de negócio, foram criados os arquivo de entrada de valores para realização de testes dentro do sistema e colocados dentro da pasta do projeto,os quais são lidos e seus dados compõem as classes. Em seguida, eles são utilizados em dois algoritmos fundamentais: primeiramente, entendendo o sistema de avaliações do aplicativo, tanto o motorista quanto o passageiro, podem se avaliar e, a partir dessa avaliação, são tiradas as médias das notas dos motoristas e dos passageiros, além disso, dentro do cadastro de veículos, foi implementado o segundo algoritmo fundamental, que realiza a contagem de veículos pretos cadastrados. Por fim, todos esses dados são retornados ao usuário nos arquivos resultado1.txt e resultado2.txt, respectivamente.
